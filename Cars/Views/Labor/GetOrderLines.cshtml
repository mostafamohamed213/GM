@model Cars.ViewModels.PagingViewModel<OrderDetails>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer localizer
@{
    ViewData["Title"] = "Labor";
    int counter = 1;
}
<form class="form" id="typefilter" method="get" asp-action="GetOrderLines" asp-controller="Labor" asp-route-currentPage="1">
    <div class="form-group col-auto">
        <div class="row">
            <div class="col-md-2">
                <input type="hidden" value="1" name="currentPage" />
                <div class="input-group-prepend">
                    <span class="input-group-text">Type</span>
                    <select name="type" id="typefilter" class="custom-select">
                        <option value="all">all </option>
                        @foreach (OrderDetailsType typ in ViewData["type"] as IList<OrderDetailsType>)
                        {
                            if (TempData["lastype"] != null && TempData["lastype"].ToString() == @typ.NameEn)
                            {
                                <option value="@typ.NameEn" selected>@typ.NameEn </option>
                            }
                            else
                            {
                                <option value="@typ.NameEn">@typ.NameEn </option>
                            }
                        }
                    </select>
                </div>
            </div>
            <div class="col-md-2">
                <div class="input-group-prepend">
                    <span class="input-group-text">Vendor</span>
                    <select name="vendor" id="vendorfilter" class="custom-select">
                        <option value="all">all </option>
                        @foreach (BranchModel vendor in ViewData["vendor"] as IList<BranchModel>)
                        {
                            if (TempData["lastvendor"] != null && TempData["lastvendor"].ToString() == @vendor.Name)
                            {
                                <option value="@vendor.BranchID" selected>@vendor.Name </option>
                            }
                            else
                            {
                                <option value="@vendor.BranchID">@vendor.Name</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <div class="col-md-3">
                <div class="input-group-prepend">
                    <span class="input-group-text">Price From</span>
                    <input type="number" name="from" class="form-control" aria-label="Amount" />
                </div>
            </div>
            <div class="col-md-3">
                <div class="input-group-prepend">
                    <span class="input-group-text">Price To</span>
                    <input type="number" name="to" class="form-control" aria-label="Amount" />
                </div>
            </div>
            <div class="col-md-2">
                <input class="btn btn-primary " style="" type="submit" value="Search" />
            </div>
        </div>
    </div>
</form>
<div class="card shadow">
    <div class="card-body">
        <div class="toolbar">

            <form class="form" id="OrderLinesTablelength" method="get" asp-action="ChangeOrderLinesTablelength" asp-controller="Labor">
                <div class="form-row">
                    <div class="form-group col-auto mr-auto">
                        <label class="my-1 mr-2 sr-only" for="inlineFormCustomSelectPref13">@localizer["Show"]</label>
                        <select name="length" class="custom-select mr-sm-2" onchange="document.getElementById('OrderLinesTablelength').submit();" id="inlineFormCustomSelectPref13">
                            @if (Model.Tablelength == 10)
                            {
                                <option value="10" selected>10</option>
                            }
                            else
                            {
                                <option value="10">10</option>
                            }
                            @if (Model.Tablelength == 25)
                            {
                                <option value="25" selected>25</option>
                            }
                            else
                            {
                                <option value="25">25</option>
                            }
                            @if (Model.Tablelength == 50)
                            {
                                <option value="50" selected>50</option>
                            }
                            else
                            {
                                <option value="50">50</option>
                            }
                            @if (Model.Tablelength == 100)
                            {
                                <option value="100" selected>100</option>
                            }
                            else
                            {
                                <option value="100">100</option>
                            }
                        </select>
                    </div>

                </div>
            </form>


        </div>
        <!-- table -->
        <table class="table table-borderless table-hover">
            <thead>
                <tr>
                    <th>#</th>
                    <th>ID</th>
                    <th>Car</th>
                    <th>Items</th>
                    <th>Price</th>
                    <th>Type</th>
                    <th>Vendor</th>
                    @*
        <th>@localizer["Brand"]</th>
        <th>@localizer["Model"]</th>
        <th>@localizer["Year"]</th>*@
                    <th>@localizer["Date"]</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.items)
                {
                <tr>
                    <td>
                        @counter
                    </td>
                    <td>
                        @item.Prefix
                    </td>
                    <td>
                        @item.Order.Vehicle.Name
                    </td>
                    <td>
                        @item.Items
                    </td>
                    <td>
                        @item.Price
                    </td>
                    <td>
                        @item.OrderDetailsType.NameEn
                    </td>
                    <td>
                        @item.VendorLocation?.Name
                    </td>
                    <td>
                        @item.DTsCreate
                    </td>
                    @if (string.IsNullOrEmpty(item.Labor_Hours.ToString()) && string.IsNullOrEmpty(item.Labor_Value.ToString()))
                    {

                        @if (item.StatusID != 4)
                        {

                            <td>
                                <a title="@localizer["Edit"]" asp-action="AddLaborvalues" asp-controller="Labor" asp-route-orderDetailsID="@item.OrderDetailsID"> <span class="small text-muted"><span class="fe fe-24 fe-edit  text-success"></span></span></a>
                            </td>
                        }
                    }

                </tr>
                    counter++;
                }

            </tbody>
        </table>
        <nav aria-label="Table Paging" class="mb-0 text-muted">
            <ul class="pagination justify-content-center mb-0">
                <li class='page-item @(Model.CurrentPageIndex == 1 ? "disabled":"")' id="dataTable_previous">
                    <a asp-action="GetOrderLines" asp-controller="Labor" asp-route-currentPage="@(Model.CurrentPageIndex-1)" class="page-link">@localizer["Previous"]</a>
                </li>
                @*
                    <li class="page-item"><a class="page-link" href="#">1</a></li>
                    <li class="page-item active"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>*@
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    @if (i != Model.CurrentPageIndex)
                    {
                        <li class="page-item">
                            <a asp-action="GetOrderLines" asp-controller="Labor" asp-route-currentPage="@i" class="page-link">@i</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item active">
                            <span class="page-link">@i</span>
                        </li>
                    }

                }
                <li class='page-item @(Model.PageCount == Model.CurrentPageIndex ? "disabled":"")' id="dataTable_next">
                    <a asp-action="GetOrderLines" asp-controller="Labor" asp-route-currentPage="@(Model.CurrentPageIndex+1)" class="page-link">@localizer["Next"]</a>
                </li>
            </ul>
        </nav>
    </div>
</div>
@section Scripts {
    <script>
        ChangeColorSidebarItem("", "addLabor");

    </script>

}
