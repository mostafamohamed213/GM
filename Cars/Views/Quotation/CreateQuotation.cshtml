@model Dictionary<long, List<Cars.Models.OrderDetails>>

@{
    ViewData["Title"] = "Create Quotation";
    int maxcount = 0;
    foreach (var item in Model)
    {
        if (item.Value.Count > maxcount)
        {
            maxcount = item.Value.Count;
        }
    }  
}
<link rel="stylesheet" href="~/Template/css/dataTables.bootstrap4.css">
<!-- Date Range Picker CSS -->
<link rel="stylesheet" href="~/Template/css/daterangepicker.css">
@if (ViewBag.ErrorMessage != null)
{
    <div class="card">
        <h3 class="text-danger">@ViewBag.ErrorMessage</h3>
    </div>
}
<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-12">
            <h2 class="mb-2 page-title">Create Quotation</h2>
            <div class="row my-4">
                <!-- Small table -->
                <div class="col-md-12">
                    <div class="card shadow">
                        <div class="card-body">
                            <!-- table -->
                            @*<table class="table datatables" id="dataTable-1">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th>Item</th>
                                            <th>ID</th>
                                            <th>Quantity</th>
                                            <th>Phone</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var order in Model)
                                        {
                                            <tr>
                                                <td>
                                                    <div class="custom-control custom-checkbox">
                                                        <input type="checkbox" class="custom-control-input">
                                                        <label class="custom-control-label"></label>
                                                    </div>
                                                </td>
                                                <td>@order.Items</td>
                                                <td>01:@order.OrderID:@order.OrderDetailsID</td>
                                                <td>@order.Quantity</td>
                                                <td>@order.Order.Customer.CustomerContacts.FirstOrDefault()?.Phone</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>*@
                            @if (Model is not null && Model.Count > 0)
                            {
                                <table class="table table-bordered table-hover mb-0">
                                    <thead>
                                        <tr>
                                            @*<th>ID</th>*@
                                            <th>Item</th>
                                            <th>Quantity</th>
                                            <th>SP-price</th>
                                            @*<th>Hours</th>*@
                                            <th>L-price</th>
                                            @*<th>Maintenance</th>*@
                                            <th>Status</th>
                                            <th>Maintenance</th>
                                            <th>Select</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var orderDetails in Model)
                                         {
                                            foreach (var item in orderDetails.Value)
                                            {
                                                <tr>
                                                    @*<td>@item.Prefix</td>*@
                                                    <td>@item.Items</td>
                                                    <td>@item.Quantity</td>
                                                    <td>@item.Price</td>
                                                    @if (item.Order.WithMaintenance.HasValue && item.Order.WithMaintenance.Value)
                                                    {
                                                        @*<td>@item.Labor_Hours</td>*@
                                                        <td>@item.Labor_Value</td>
                                                    }
                                                    else
                                                    {
                                                        @*<td>--</td>*@
                                                        <td>--</td>
                                                    }

                                                    @if (item.ParentOrderDetailsID.HasValue)
                                                    {
                                                        <td>  <span title="Alternative" class="fe fe-24 fe-minus text-danger"></span></td>
                                                    }
                                                    else
                                                    {
                                                        <td>
                                                            <span title="Main Oder line" class="fe fe-24 fe-chevrons-down  text-success"></span>
                                                        </td>
                                                    }
                                                       <td>
                                                            @if (item.Order.WithMaintenance.HasValue && item.Order.WithMaintenance.Value)
                                                            {
                                                            <div class="custom-control custom-switch">
                                                                <input type="checkbox" checked class='custom-control-input MaintenanceClass' onchange="addOrRemoveWithMaintenance(this,@item.OrderDetailsID)" id="WithMaintenance @item.OrderDetailsID">
                                                                <label class="custom-control-label" for="WithMaintenance @item.OrderDetailsID"></label>
                                                            </div>
                                                            }
                                                            else
                                                            {
                                                               <span>--</span>
                                                            }

                                                        </td>
                                                    <td>
                                                        <div class="custom-control custom-switch">
                                                            <input type="checkbox" class='custom-control-input @(item.ParentOrderDetailsID.HasValue? item.ParentOrderDetailsID.Value: item.OrderDetailsID)' onchange="addOrRemoveOrderLinesId(@(item.ParentOrderDetailsID.HasValue? item.ParentOrderDetailsID.Value: item.OrderDetailsID),@item.OrderDetailsID)" id="@item.OrderDetailsID">
                                                            <label class="custom-control-label" for="@item.OrderDetailsID"></label>
                                                        </div>
                                                    </td>
                                                </tr>

                                            }
                                    <tr>
                                        <td>---</td>
                                        <td>---</td>
                                        <td>---</td>
                                        <td>---</td>
                                        <td>---</td>
                                        <td>---</td>
                                        <td>---</td>
                                    </tr>
                                         }
                                    </tbody>
                                </table>
                            }
                            else
                            {
                                <div>No order yet</div>
                                <a class="btn btn-success" asp-action="Index" asp-controller="Quotation">Back</a>

                            }


                        </div>
                    </div>
                </div> <!-- simple table -->
            </div> <!-- end section -->
        </div> <!-- .col-12 -->
    </div> <!-- .row -->
</div>
@if (Model is not null && Model.Count > 0)
{
    <a class="btn btn-primary" asp-action="Index" asp-controller="Quotation">Back</a>

    <button class="btn btn-success" onclick="submitForm()">Save and continue</button>
    <form id="formCreateQuotation" asp-action="CreateQuotation" asp-controller="Quotation" method="post">
        <input type="hidden" name="orderLinesIdList" id="orderLinesIdList" />
    </form>
}

@section Scripts {
    <script src='~/Template/js/jquery.dataTables.min.js'></script>
    <script src='~/Template/js/dataTables.bootstrap4.min.js'></script>
    <script>
        $('#dataTable-1').DataTable(
            {
                autoWidth: true,
                "lengthMenu": [
                    [16, 32, 64, -1],
                    [16, 32, 64, "All"]
                ]
            });
    </script>
    <script>

        ChangeColorSidebarItem("anavbarQuotation", "aAddQuotations");

        let orderLinesIds = [];

        (function () {
            var mElementIds = document.getElementsByClassName("MaintenanceClass");
            if (mElementIds.length > 0) {
                Array.prototype.forEach.call(mElementIds, function (el) {
                    el.disabled = true;
                });
            }
        })();

        function addOrRemoveOrderLinesId(classgroup, orderLineid) {

            var els = document.getElementsByClassName(classgroup);
            var element = document.getElementById(orderLineid);
            var maintenance = document.getElementById("WithMaintenance " + orderLineid);

            if (element.checked) {
                var maintenanceValue = false;
                if (maintenance != null) {
                    maintenanceValue = maintenance.checked;
                    maintenance.disabled = false;
                } 
                var el = { id: orderLineid, maintenance: maintenanceValue };            
                orderLinesIds.push(el);
                Array.prototype.forEach.call(els, function (el) {
                    if (el.id != orderLineid) {
                        el.disabled = true;                         
                    }
                });
            } else {
             
                if (maintenance != null) {
                    maintenance.disabled = true;
                }
                orderLinesIds = arrayRemove(orderLinesIds, orderLineid);
                Array.prototype.forEach.call(els, function (el) {
                    el.disabled = false;                
                });
            }
            console.log(orderLinesIds);
        }

        function arrayRemove(arr, value) {
            return arr.filter(function (ele) {
                return ele.id != value;
            });
        }

        function addOrRemoveWithMaintenance(element,id) {

                Array.prototype.forEach.call(orderLinesIds, function (e) {
                    if (e.id == id) {
                        if (element.checked) {
                            e.maintenance = true;
                        } else {
                            e.maintenance = false;
                        }
                    }
                });
            console.log(orderLinesIds);
        }

        function submitForm() {
            if (orderLinesIds.length > 0) {
                document.getElementById("orderLinesIdList").value = JSON.stringify(orderLinesIds);
                document.getElementById('formCreateQuotation').submit();
            } else {
                alert("Please Select Order Lines");
            }

        }
    </script>

}